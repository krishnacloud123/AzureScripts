
# Disclaimer -  These are test scripts - for learning purposes and not to be used in any production enviornment. 

# Az cli script to create Postgres flexible server
az postgres flexible-server create --public-access all

#Autogenerated server name, admin username, admin password, resource group name 
#Using public-access argument allow you to create a server with public access to any client with correct username and password.

Output After creation

Creating Resource Group 'group9990958970'...
Creating PostgreSQL Server 'server710410098' in group 'group9990958970'...
Your server 'server710410098' is using sku 'Standard_D2s_v3' (Paid Tier). Please refer to https://aka.ms/postgres-pricing for pricing details
Configuring server firewall rule to accept connections from '0.0.0.0' to '255.255.255.255'...
Creating PostgreSQL database 'flexibleserverdb'...
Make a note of your password. If you forget, you would have to reset your password with "az postgres flexible-server update -n server71xxx -g xxxx -p <new-password>".
Try using 'az postgres flexible-server connect' command to test out connection.
{
  "connectionString": "postgresql://starkbuffalo6:xxxxx@server710410098.postgres.database.azure.com/postgres?sslmode=require",
  "databaseName": "flexibleserverdb",
  "firewallName": "AllowAll_2022-10-9_12-39-57",
  "host": "serverxxxx.postgres.database.azure.com",
  "id": "/subscriptions/xxxxxx/resourceGroups/group9990958970/providers/Microsoft.DBforPostgreSQL/flexibleServers/server710410098",
  "location": "East US",
  "password": "xxx",
  "resourceGroup": "groupxxxx70",
  "skuname": "Standard_D2s_v3",
  "username": "xxxx",
  "version": "13"
}
